name: Actions

on: pull_request

jobs:
  rubocop:
    name: Rubocop
    runs-on: ubuntu-latest
    steps:
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Install Ruby and gems
          uses: ruby/setup-ruby@v1
          with:
            ruby-version: '3.2.2'
            bundler-cache: true
        - name: Bundle install
          run: bundle install
       
        - name: Security audit dependencies
          run: bundle exec bundle audit --update
        - name: Security audit application code
          run: bundle exec brakeman -q -w2
        - name: Lint Ruby files
          run: bundle exec rubocop --parallel
  nodechecker:
    name: node_modules checker
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Check node_modules existence
        run: |
          if [ -d "node_modules/" ]; then echo -e "\e[1;31mThe node_modules/ folder was pushed to the repo. Please remove it from the GitHub repository and try again."; echo -e "\e[1;32mYou can set up a .gitignore file with this folder included on it to prevent this from happening in the future." && exit 1; fi
  test:
    name: RSpec
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgres:14-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: kindergarten_exchange_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/starter_rails_api_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler: default
          bundler-cache: true

      - name: npm install
        run: npm install
  
      - name: Create database tables
        run: bin/rails db:create
      - name: Set up database schema
        run: bin/rails db:schema:load
  
      - name: Run tests
        run: bin/bundle exec rspec spec
  jest_test:
    name: Jest
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: npm install for Jest
        run: npm install

      - name: Run Jest tests
        run: npm test -- --ci --coverage